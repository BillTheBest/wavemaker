<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.wavemaker</groupId>
		<artifactId>wavemaker-desktop</artifactId>
		<version>6.5.0.BUILD-SNAPSHOT</version>
	</parent>
	<artifactId>wavemaker-installer</artifactId>
	<packaging>pom</packaging>
	<properties>
		<main.basedir>${basedir}/../..</main.basedir>
	</properties>

	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>wavemaker-launcher</artifactId>
			<version>${project.version}</version>
			<classifier>full</classifier>
			<type>zip</type>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>wavemaker-studio</artifactId>
			<version>${project.version}</version>
			<type>war</type>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>ant-contrib</groupId>
						<artifactId>ant-contrib</artifactId>
						<version>1.0b3</version>
						<exclusions>
							<exclusion>
								<groupId>ant</groupId>
								<artifactId>ant</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>create-base-structure</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<property name="buildroot" value="${project.build.directory}/contents" />
								
								<!-- Launcher -->
								<unzip src="${com.wavemaker:wavemaker-launcher:zip:full}"
									dest="${buildroot}/launcher" />
								
								<!-- Samples -->
								<mkdir dir="${buildroot}/Samples" />
								
								<!-- Studio Configure Application -->
								<unzip src="${com.wavemaker:wavemaker-studio:war}" dest="${buildroot}/studio">
										<patternset>
											<exclude name="**/lib/ace/**"/>
											<exclude name="**/jtds*.jar"/>
											<exclude name="**/hibernate*.jar"/>
											<exclude name="**/db2jcc.jar" />
											<exclude name="**/ojdbc14.jar" />
											<exclude name="**/wsdl4j.jar" />
										</patternset>
									</unzip>
								<copy todir="${buildroot}/studioConfig">
										<fileset
										dir="${basedir}/../applications/StudioConfigure/webapproot" >
											<exclude name="**/lib/ace/**"/>
											<exclude name="**/jtds*.jar"/>
											<exclude name="**/hibernate*.jar"/>
											<exclude name="**/db2jcc.jar" />
											<exclude name="**/ojdbc14.jar" />
											<exclude name="**/wsdl4j.jar" />
										</fileset>	
									</copy>								
								<!-- Licence -->
								<copy todir="${project.build.directory}">
									<fileset
										dir="${basedir}/../../build-infrastructure/supporting-files"/> 
								</copy>
								
								<!-- Version -->
								<echo file="${project.build.directory}/VERSION.txt">WaveMaker ${project.version} at commit:
        						</echo>
								<exec executable="git" output="${project.build.directory}/VERSION.txt" append="true" failifexecutionfails="false">
									<arg line="rev-parse --verify HEAD"/>
								</exec>	
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>macosx</id>
			<activation>
				<os>
					<family>unix</family>
					<name>mac os x</name>
				</os>
			</activation>
			<properties>
				<test>value</test>
			</properties>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<dependencies>
							<dependency>
								<groupId>ant-contrib</groupId>
								<artifactId>ant-contrib</artifactId>
								<version>20020829</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>macosx</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<property name="buildroot"
											value="${project.build.directory}/macosxcontents" />
										<move todir="${buildroot}/WaveMaker.app">
											<fileset dir="${project.build.directory}/contents" />
										</move>
										<copy todir="${buildroot}/WaveMaker.app">
											<fileset dir="${basedir}/src/macosx/WaveMaker.app">
												<exclude name="**/Info.plist" />
											</fileset>
										</copy>
										<copy todir="${buildroot}/WaveMaker.app">
											<fileset dir="${basedir}/src/macosx/WaveMaker.app">
												<include name="**/Info.plist" />
											</fileset>
											<filterset>
												<filter token="VERSION.NUMBER" value="${project.version}" />
											</filterset>
										</copy>

										<copy file="${project.build.directory}/LICENSE.txt"                                 
												tofile="${buildroot}/WaveMaker.app/LICENSE.txt" >
										</copy>

										<copy file="${project.build.directory}/NOTICE.txt"                                 
												tofile="${buildroot}/WaveMaker.app/NOTICE.txt" >
										</copy>

										<copy file="${project.build.directory}/VERSION.txt"                                 
												tofile="${buildroot}/WaveMaker.app/VERSION.txt" >
										</copy>
										
										<exec executable="chmod" failonerror="true">
											<arg value="+x" />
											<arg value="${buildroot}/WaveMaker.app/Contents/MacOS/wmstart.sh" />
										</exec>
										<symlink link="${buildroot}/Applications" resource="/Applications" />
										<exec executable="hdiutil" failonerror="true">
											<arg value="create" />
											<arg value="-ov" />
											<arg value="-anyowners" />
											<arg value="-srcfolder" />
											<arg value="${buildroot}" />
											<arg value="-volname" />
											<arg value="wavemaker-${project.version}" />
											<arg
												value="${project.build.directory}/wavemaker-${project.version}.dmg" />
										</exec>
										<exec executable="rm">
											<arg value="${buildroot}/Applications" />
										</exec>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>linux</id>
			<activation>
				<os>
					<family>unix</family>
					<name>linux</name>
				</os>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>linux</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<taskdef resource="net/sf/antcontrib/antlib.xml" />
										<exec executable="sed" inputstring="${project.version}"
											outputproperty="rpmversion">
											<arg value="s/-/_/g" />
										</exec>
										<property name="buildroot"
											value="${project.build.directory}/linuxcontents" />

										<mkdir dir="${buildroot}/opt/wavemaker-${project.version}" />
										<move todir="${buildroot}/opt/wavemaker-${project.version}">
											<fileset dir="${project.build.directory}/contents" />
										</move>

									   <copy file="${project.build.directory}/LICENSE.txt" 
											   tofile="${buildroot}/opt/wavemaker-${project.version}/LICENSE" >
									   </copy>

										<copy file="${project.build.directory}/NOTICE.txt" 
												tofile="${buildroot}/opt/wavemaker-${project.version}/NOTICE" >
										</copy>

										<copy file="${project.build.directory}/NOTICE.txt" 
												tofile="${buildroot}/opt/wavemaker-${project.version}/copyright" >
										</copy>
										
									   <copy file="${project.build.directory}/VERSION.txt" 
												tofile="${buildroot}/opt/wavemaker-${project.version}/VERSION" >
										</copy>

										<mkdir dir="${buildroot}/opt/wavemaker-${project.version}/bin" />
										<copy file="${basedir}/src/linux/bin/wavemaker.sh.template"
											tofile="${buildroot}/opt/wavemaker-${project.version}/bin/wavemaker.sh">
											<filterset>
												<filter token="PREFIX" value="/opt/wavemaker-${project.version}" />
											</filterset>
										</copy>
										<exec executable="chmod" failonerror="true">
											<arg value="+x" />
											<arg
												value="${buildroot}/opt/wavemaker-${project.version}/bin/wavemaker.sh" />
										</exec>
										<copy file="${basedir}/src/linux/README.template"
											tofile="${buildroot}/opt/wavemaker-${project.version}/README">
											<filterset>
												<filter token="VERSION" value="${project.version}" />
											</filterset>
										</copy>

										<!-- RPMs -->
										<if>
											<available file="/usr/bin/rpmbuild" />
											<then>
												<exec executable="${basedir}/src/linux/rpm/genspec.py"
													failonerror="true" dir="${buildroot}" logerror="true"
													outputproperty="files.list">
													<arg line="." />
												</exec>
												<concat destfile="${project.build.directory}/wavemaker.spec">
													<path>
														<pathelement
															location="${basedir}/src/linux/rpm/wavemaker.spec.template" />
													</path>
													<propertyset>
														<propertyref name="files.list" />
													</propertyset>
													<filterchain>
														<replacetokens>
															<token key="VERSION" value="${rpmversion}" />
															<token key="BUILDROOT" value="${buildroot}" />
															<token key="TOPDIR" value="${project.build.directory}" />
															<token key="FILES" value="${files.list}" />
														</replacetokens>
													</filterchain>
												</concat>
												<mkdir dir="${project.build.directory}/RPMS/i386" />
												<exec executable="rpmbuild" logerror="true"
													failonerror="true" dir="${project.build.directory}">
													<arg line="-bb" />
													<arg line="wavemaker.spec" />
												</exec>
											</then>
										</if>

										<!-- DPKGs -->
										<if>
											<available file="/usr/bin/dpkg" />
											<then>
												<for list="amd64,i386" param="arch">
													<sequential>
														<mkdir dir="${buildroot}/@{arch}/DEBIAN" />
														<copy todir="${buildroot}/@{arch}/DEBIAN">
															<fileset dir="${basedir}/src/linux/DEBIAN_@{arch}" />
															<filterset>
																<filter token="VERSION" value="${project.version}" />
															</filterset>
														</copy>
														<exec executable="cp">
															<arg value="-R" />
															<arg value="${buildroot}/opt" />
															<arg value="${buildroot}/@{arch}/opt" />
														</exec>
														<exec executable="chown" failonerror="true">
															<arg line="-R" />
															<arg line="root" />
															<arg line="${buildroot}/@{arch}/opt" />
														</exec>
														<exec executable="chgrp" failonerror="true">
															<arg line="-R" />
															<arg line="root" />
															<arg line="${buildroot}/@{arch}/opt" />
														</exec>
														<exec executable="dpkg" logerror="true" failonerror="true">
															<arg line="--build" />
															<arg line="${buildroot}/@{arch}" />
															<arg line="${project.build.directory}" />
														</exec>
														<exec executable="whoami" failonerror="false"
															outputproperty="userID" />
														<exec executable="chown" failonerror="false">
															<arg line="-R" />
															<arg line="${userID}" />
															<arg line="${buildroot}/@{arch}/opt" />
														</exec>
													</sequential>
												</for>
											</then>
										</if>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>win32</id>
			<activation>
				<os>
					<family>Windows</family>
				</os>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>windows</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<taskdef resource="net/sf/antcontrib/antlib.xml" />
										<property name="buildroot"
											value="${project.build.directory}/windowscontents" />
										<property name="java.zip" value="jdk1.6.0_24.zip" />
										<property name="java.zip.file" value="${env.BUILD_JDK_ZIP}/${java.zip}" />
										<property name="signtool"
											value="C:\Program Files\Microsoft Platform SDK for Windows Server 2003 R2\Bin\signtool.exe" />

										<move todir="${buildroot}">
											<fileset dir="${project.build.directory}/contents" />
										</move>
										<if>
											<not>
												<available file="${java.zip.file}" />
											</not>
											<then>
												<fail
													message="Could not find ${java.zip}. Ensure ${java.zip} is in %BUILD_JDK_ZIP%, currently set to: ${env.BUILD_JDK_ZIP}." />
											</then>
										</if>
										<mkdir dir="${buildroot}" />
										<unzip src="${java.zip.file}" dest="${buildroot}" />

										<pathconvert targetos="windows" property="buildroot.windows">
											<path>
												<pathelement location="${buildroot}" />
											</path>
										</pathconvert>
										<pathconvert targetos="windows" property="license.windows">
											<path>
												<pathelement location="${project.build.directory}/LICENSE.txt" />
											</path>
										</pathconvert>
										<exec
											executable="${basedir}/src/windows\NSIS-unicode-2.42.4/makensis.exe"
											dir="${basedir}/src/windows"
											osfamily="Windows" failonerror="true">
											<arg line="/V1" />
											<arg line="/DVERSION=${project.version}" />
											<arg line="/DLONGVERSION=${project.version}" />
											<arg line="/DSOURCEDIR=&quot;\\?\${buildroot.windows}&quot;" />
											<arg line="/DLICENSEFILE=&quot;${license.windows}&quot;" />
											<arg line="/DBUILDSUPPORTDIR=&quot;${project.build.directory}&quot;" />
											<arg line="/X&quot;OutFile ${project.build.directory}/wavemaker-${project.version}.exe&quot;" />
											<arg line="Mavericks.nsi" />
										</exec>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
