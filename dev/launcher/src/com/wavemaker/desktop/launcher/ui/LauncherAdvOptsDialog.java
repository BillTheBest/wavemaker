/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LauncherAdvOptsDialog.java
 *
 * Created on Jan 5, 2011, 11:43:55 AM
 */
package com.wavemaker.desktop.launcher.ui;

import com.wavemaker.desktop.launcher.Main;
import java.awt.Color;
import java.io.File;

import java.io.IOException;
import java.net.URISyntaxException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author cconover
 */
public class LauncherAdvOptsDialog extends javax.swing.JDialog
{
    private MainConsole console;
    private String folder = null;

    /** Creates new form LauncherAdvOptsDialog */
    public LauncherAdvOptsDialog(java.awt.Frame parent, boolean modal)
    {
        super(parent, modal);
        console = (MainConsole)parent;
        initComponents();
        initOptions();
    }

    private void initOptions()
    {
        tfBrowser.setText(console.prefs.get(MainConsole.OPTION_STUDIO_BROWSER, MainConsole.VAL_SYS_DEF_BROWSER));
        ckbStudioDebug.setSelected(console.prefs.getBoolean(MainConsole.OPTION_ENABLE_DEBUG, false));
        ckbLiveLayout.setSelected(console.prefs.getBoolean(MainConsole.OPTION_ENABLE_LIVELAYOUT, true));
        ckbSubPageDisplay.setSelected(console.prefs.getBoolean(MainConsole.OPTION_ENABLE_SUBPAGES, true));
        tfNewServerPort.setText(String.valueOf(console.tomcatConfig.getServicePort()));
        tfNewShutdownPort.setText(String.valueOf(console.tomcatConfig.getShutdownPort()));

        console.optionsSave.put(MainConsole.OPTION_STUDIO_BROWSER, 
            String.valueOf(console.prefs.get(MainConsole.OPTION_STUDIO_BROWSER, MainConsole.VAL_SYS_DEF_BROWSER)));

        console.optionsSave.put(MainConsole.OPTION_ENABLE_DEBUG,
            String.valueOf(console.prefs.getBoolean(MainConsole.OPTION_ENABLE_DEBUG, false)));

        console.optionsSave.put(MainConsole.OPTION_ENABLE_LIVELAYOUT, 
            String.valueOf(console.prefs.getBoolean(MainConsole.OPTION_ENABLE_LIVELAYOUT, true)));

        console.optionsSave.put(MainConsole.OPTION_ENABLE_SUBPAGES, 
            String.valueOf(console.prefs.getBoolean(MainConsole.OPTION_ENABLE_SUBPAGES, true)));

        console.optionsSave.put(MainConsole.OPTION_SERVER_PORT, 
            String.valueOf(console.tomcatConfig.getServicePort()));

        console.optionsSave.put(MainConsole.OPTION_SHUTDOWN_PORT,
            String.valueOf(console.tomcatConfig.getShutdownPort()));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnReset = new javax.swing.JButton();
        lblBrowser = new javax.swing.JLabel();
        tfBrowser = new javax.swing.JTextField();
        btnFileChooser = new javax.swing.JButton();
        btnDefBrowser = new javax.swing.JButton();
        pnlPorts = new javax.swing.JPanel();
        lblNewServerPort = new javax.swing.JLabel();
        tfNewServerPort = new javax.swing.JTextField();
        lblNewShutdownPort = new javax.swing.JLabel();
        tfNewShutdownPort = new javax.swing.JTextField();
        pnlCheckboxes = new javax.swing.JPanel();
        ckbLiveLayout = new javax.swing.JCheckBox();
        ckbSubPageDisplay = new javax.swing.JCheckBox();
        ckbStudioDebug = new javax.swing.JCheckBox();
        pnlButtons = new javax.swing.JPanel();
        btnCancel = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Advanced Options");
        setAlwaysOnTop(true);
        setModalityType(java.awt.Dialog.ModalityType.DOCUMENT_MODAL);
        setName("LaunchAdvOptsDlg"); // NOI18N

        lblBrowser.setLabelFor(tfBrowser);
        lblBrowser.setText("Studio Browser:");

        tfBrowser.setEditable(false);
        tfBrowser.setText("<system default browser>");

        btnFileChooser.setText("...");
        btnFileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFileChooserActionPerformed(evt);
            }
        });

        btnDefBrowser.setText("Use System Default Browser");
        btnDefBrowser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDefBrowserActionPerformed(evt);
            }
        });

        pnlPorts.setBackground(new java.awt.Color(255, 255, 255));
        pnlPorts.setBorder(javax.swing.BorderFactory.createTitledBorder("Server Options"));

        lblNewServerPort.setLabelFor(tfNewServerPort);
        lblNewServerPort.setText("Server Port:");

        tfNewServerPort.setText("8194");
        tfNewServerPort.setToolTipText("Change server port for next Studio launch.");
        tfNewServerPort.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfNewServerPortFocusLost(evt);
            }
        });

        lblNewShutdownPort.setLabelFor(tfNewShutdownPort);
        lblNewShutdownPort.setText("Shutdown  Port:");

        tfNewShutdownPort.setText("8119");
        tfNewShutdownPort.setToolTipText("Change server port for next Studio launch.");
        tfNewShutdownPort.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfNewShutdownPortFocusLost(evt);
            }
        });

        javax.swing.GroupLayout pnlPortsLayout = new javax.swing.GroupLayout(pnlPorts);
        pnlPorts.setLayout(pnlPortsLayout);
        pnlPortsLayout.setHorizontalGroup(
            pnlPortsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPortsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPortsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblNewShutdownPort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblNewServerPort, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPortsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfNewShutdownPort, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfNewServerPort, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlPortsLayout.setVerticalGroup(
            pnlPortsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPortsLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(pnlPortsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNewServerPort)
                    .addComponent(tfNewServerPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPortsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNewShutdownPort)
                    .addComponent(tfNewShutdownPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pnlCheckboxes.setBackground(new java.awt.Color(255, 255, 255));
        pnlCheckboxes.setBorder(javax.swing.BorderFactory.createTitledBorder("Browser Options"));

        ckbLiveLayout.setBackground(new java.awt.Color(255, 255, 255));
        ckbLiveLayout.setSelected(true);
        ckbLiveLayout.setText("Enable Studio Live Layout?");
        ckbLiveLayout.setToolTipText("Enables live data to be displayed at design time in grids and editors.");

        ckbSubPageDisplay.setBackground(new java.awt.Color(255, 255, 255));
        ckbSubPageDisplay.setSelected(true);
        ckbSubPageDisplay.setText("Show Subpages in Page Containers?");
        ckbSubPageDisplay.setToolTipText("Shows the page contents of all Page Containers (decreases Studio performance).");

        ckbStudioDebug.setBackground(new java.awt.Color(255, 255, 255));
        ckbStudioDebug.setText("Enable Studio Debug?");
        ckbStudioDebug.setToolTipText("Enables debugging the Studio using the browser's developer tools (decreases Studio performance). Does not effect project's debug mode.");

        javax.swing.GroupLayout pnlCheckboxesLayout = new javax.swing.GroupLayout(pnlCheckboxes);
        pnlCheckboxes.setLayout(pnlCheckboxesLayout);
        pnlCheckboxesLayout.setHorizontalGroup(
            pnlCheckboxesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCheckboxesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCheckboxesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(ckbStudioDebug, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ckbLiveLayout, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ckbSubPageDisplay, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlCheckboxesLayout.setVerticalGroup(
            pnlCheckboxesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCheckboxesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ckbLiveLayout, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ckbSubPageDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ckbStudioDebug, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlButtons.setBackground(new java.awt.Color(255, 255, 255));
        pnlButtons.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlButtonsMouseClicked(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlButtonsLayout = new javax.swing.GroupLayout(pnlButtons);
        pnlButtons.setLayout(pnlButtonsLayout);
        pnlButtonsLayout.setHorizontalGroup(
            pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlButtonsLayout.createSequentialGroup()
                .addContainerGap(249, Short.MAX_VALUE)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlButtonsLayout.setVerticalGroup(
            pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlButtonsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblBrowser, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDefBrowser, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tfBrowser, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnFileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlCheckboxes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pnlPorts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlButtons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(lblBrowser)
                    .addComponent(tfBrowser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDefBrowser, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlPorts, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlCheckboxes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20)
                .addComponent(pnlButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnSaveActionPerformed
    {//GEN-HEADEREND:event_btnSaveActionPerformed
//        if (JOptionPane.showConfirmDialog(JOptionPane.getRootFrame(),
//                "Save current Studio launch options for future sessions?",
//                "Save Launch Options", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
//        {
        console.prefs.put(MainConsole.OPTION_STUDIO_BROWSER, tfBrowser.getText());
        console.prefs.putBoolean(MainConsole.OPTION_ENABLE_LIVELAYOUT, ckbLiveLayout.isSelected());
        console.prefs.putBoolean(MainConsole.OPTION_ENABLE_SUBPAGES, ckbSubPageDisplay.isSelected());
        console.prefs.putBoolean(MainConsole.OPTION_ENABLE_DEBUG, ckbStudioDebug.isSelected());

        try
        {
            int newPort = Integer.parseInt(tfNewServerPort.getText());
            if (newPort != console.tomcatConfig.getServicePort())
            {
                console.tomcatConfig.setServicePort(newPort);
            }

            newPort = Integer.parseInt(tfNewShutdownPort.getText());
            if (newPort != console.tomcatConfig.getShutdownPort())
            {
                console.tomcatConfig.setShutdownPort(newPort);
            }

            Main.setDefaultTomcatConfiguration(console.tomcatConfig);
        }
        catch (IOException e)
        {
            e.printStackTrace();
            JOptionPane.showConfirmDialog(JOptionPane.getRootFrame(),
                "Error storing server configuration information:\n"
                + e.getMessage(), "Save Preferences",
                JOptionPane.OK_OPTION,
                JOptionPane.ERROR_MESSAGE);
        }
        catch (URISyntaxException e)
        {
            e.printStackTrace();
        }

        initOptions();
        dispose();
//        }
}//GEN-LAST:event_btnSaveActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnResetActionPerformed
    {//GEN-HEADEREND:event_btnResetActionPerformed
        console.prefs.put(MainConsole.OPTION_STUDIO_BROWSER,
            console.optionsSave.get(MainConsole.OPTION_STUDIO_BROWSER));

        console.prefs.putBoolean(MainConsole.OPTION_ENABLE_DEBUG, Boolean.parseBoolean(
            console.optionsSave.get(MainConsole.OPTION_ENABLE_DEBUG)));

        console.prefs.putBoolean(MainConsole.OPTION_ENABLE_LIVELAYOUT,
            Boolean.parseBoolean(console.optionsSave.get(MainConsole.OPTION_ENABLE_LIVELAYOUT)));

        console.prefs.putBoolean(MainConsole.OPTION_ENABLE_SUBPAGES,
            Boolean.parseBoolean(console.optionsSave.get(MainConsole.OPTION_ENABLE_SUBPAGES)));

        console.tomcatConfig.setServicePort(Integer.parseInt(
            console.optionsSave.get(MainConsole.OPTION_SERVER_PORT)));

        console.tomcatConfig.setShutdownPort(Integer.parseInt(
            console.optionsSave.get(MainConsole.OPTION_SHUTDOWN_PORT)));

        initOptions();
}//GEN-LAST:event_btnResetActionPerformed

    private void tfNewServerPortFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_tfNewServerPortFocusLost
    {//GEN-HEADEREND:event_tfNewServerPortFocusLost
        try
        {
            int newPort = Integer.parseInt(tfNewServerPort.getText());
        }
        catch (NumberFormatException e)
        {
            tfNewServerPort.setText(Integer.toString(console.tomcatConfig.getServicePort()));
        }
}//GEN-LAST:event_tfNewServerPortFocusLost

    private void tfNewShutdownPortFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_tfNewShutdownPortFocusLost
    {//GEN-HEADEREND:event_tfNewShutdownPortFocusLost
        try
        {
            int newPort = Integer.parseInt(tfNewShutdownPort.getText());
        }
        catch (NumberFormatException e)
        {
            tfNewShutdownPort.setText(Integer.toString(console.tomcatConfig.getShutdownPort()));
        }
}//GEN-LAST:event_tfNewShutdownPortFocusLost

    private void btnFileChooserActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnFileChooserActionPerformed
    {//GEN-HEADEREND:event_btnFileChooserActionPerformed
        final JFileChooser chooser = new JFileChooser();
        if (folder != null)
        {
            chooser.setCurrentDirectory(new File(folder));
        }

        if (chooser.showOpenDialog(getParent()) == JFileChooser.APPROVE_OPTION)
        {
            tfBrowser.setText(chooser.getSelectedFile().getAbsolutePath());
            folder = chooser.getCurrentDirectory().getAbsolutePath();
        }
    }//GEN-LAST:event_btnFileChooserActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnCancelActionPerformed
    {//GEN-HEADEREND:event_btnCancelActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnDefBrowserActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnDefBrowserActionPerformed
    {//GEN-HEADEREND:event_btnDefBrowserActionPerformed
        tfBrowser.setText(MainConsole.VAL_SYS_DEF_BROWSER);
    }//GEN-LAST:event_btnDefBrowserActionPerformed

    private void pnlButtonsMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_pnlButtonsMouseClicked
    {//GEN-HEADEREND:event_pnlButtonsMouseClicked
        if (evt.isControlDown()) btnReset.doClick();
    }//GEN-LAST:event_pnlButtonsMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                LauncherAdvOptsDialog dialog = new LauncherAdvOptsDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter()
                {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e)
                    {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDefBrowser;
    private javax.swing.JButton btnFileChooser;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSave;
    private javax.swing.JCheckBox ckbLiveLayout;
    private javax.swing.JCheckBox ckbStudioDebug;
    private javax.swing.JCheckBox ckbSubPageDisplay;
    private javax.swing.JLabel lblBrowser;
    private javax.swing.JLabel lblNewServerPort;
    private javax.swing.JLabel lblNewShutdownPort;
    private javax.swing.JPanel pnlButtons;
    private javax.swing.JPanel pnlCheckboxes;
    private javax.swing.JPanel pnlPorts;
    private javax.swing.JTextField tfBrowser;
    private javax.swing.JTextField tfNewServerPort;
    private javax.swing.JTextField tfNewShutdownPort;
    // End of variables declaration//GEN-END:variables
}
