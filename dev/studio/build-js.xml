<!--
   -  Copyright (C) 2011 VMWare, Inc. All rights reserved.
   -
   -  Licensed under the Apache License, Version 2.0 (the "License");
   -  you may not use this file except in compliance with the License.
   -  You may obtain a copy of the License at
   -     http://www.apache.org/licenses/LICENSE-2.0
   -  Unless required by applicable law or agreed to in writing, software
   -  distributed under the License is distributed on an "AS IS" BASIS,
   -  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   -  See the License for the specific language governing permissions and
   -  limitations under the License.
->

<project name="studio" default="build" basedir=".">

    <property name="root.dir" location=".."/>
    <import file="${root.dir}/common.build.xml"/>

    <property file="build.properties"/>

    <property name="lib.webapproot.studio.dir"
            value="${webapproot.studio.dir}/lib"/>
    <property name="dojo.build.file"
            value="${lib.webapproot.studio.dir}/dojo/dojo/dojo_build.js"/>
    <property name="build.webapproot.studio.dir"
            value="${webapproot.studio.dir}/build"/>
    <property name="build.lib.webapproot.studio.dir"
            value="${lib.webapproot.studio.dir}/build"/>
    <property name="compressed.modules"
            value="${lib.webapproot.studio.dir}/wm/compressed"/>

    <target name="clean" description="clean js">
        <!-- js build output & temp files -->
        <delete dir="${lib.webapproot.studio.dir}/studio"/>
        <delete dir="${dojo.src.dir}/release"/>
        <delete dir="${dojo.release.dir}"/>
        <delete dir="${dojo.release-temp.dir}"/>
        <delete dir="${build.lib.webapproot.studio.dir}"/>
    	<delete dir="${compressed.modules}"/>
        <delete dir="${build.webapproot.studio.dir}"/>
        <delete dir="${jslint.statusfile}"/>
        <delete file="${lib.webapproot.studio.dir}/dojo/dojo/dojo_build.js.gz"/>
    </target>

    <target name="build" depends="check_uptodate, -do-build"/>

    <target name="check_uptodate">
        <uptodate property="jsbuild.uptodate">
            <srcfiles dir="${webapproot.studio.dir}"
                    includes="**/*.js"/>
            <mapper>
                <compositemapper>
                    <mergemapper to="${dojo.build.file}"/>
                    <mergemapper to="${build.webapproot.studio.dir}/studio.js"/>
                    <mergemapper to="${build.webapproot.studio.dir}/studio_base.js"/>
                    <mergemapper to="${build.webapproot.studio.dir}/studio_wm.js"/>
                    <mergemapper to="${build.lib.webapproot.studio.dir}/lib_build.js"/>               
                </compositemapper>
            </mapper>
        </uptodate>
    </target>

    <target name="-do-build" depends="check_uptodate" unless="jsbuild.uptodate">
        <touch file="${dojo.build.file}"/>
        <mkdir dir="${dojo.release-temp.dir}"/>
		<chmod file="${dojo.src.dir}/util/buildscripts/build.sh" perm="a+x" />
		<condition property="dojo.executable.cmd" value="cmd" else="${dojo.src.dir}/util/buildscripts/build.sh">
			<os family="windows"/>
		</condition>
		<condition property="executable.cmd.variable" value="/c" else="null=null">
			<os family="windows"/>
		</condition>
		<condition property="dojo.script-path-param" value="${dojo.src.dir}/util/buildscripts/build.bat" else="null=null">
			<os family="windows"/>
		</condition>


        <!-- these need to be clean before we build, or it'll interfere -->
        <delete dir="${lib.webapproot.studio.dir}/wm/build"/>
        <delete dir="${build.webapproot.studio.dir}"/>

        	
        <!-- runtime build -->
	<!-- parameters documented at http://dojotoolkit.org/reference-guide/build/buildScript.html -->
		<echo>Building dojo using exec: ${dojo.executable.cmd}</echo>
		<exec dir="${dojo.src.dir}/util/buildscripts/" executable="${dojo.executable.cmd}"	>
			<arg value="${executable.cmd.variable}"/>
			<arg value="${dojo.script-path-param}"/>
       		<arg value="releaseDir=${dojo.release.dir}"/>
       		<arg value="profileFile=${basedir}/webapproot/app/buildUtil/profiles/wm.profile.js"/>
       		<arg value="copyTests=false"/>
       		<arg value="version=1.5.0.pro"/>
       		<arg value="action=clean,release"/>
       		<arg value="optimize=shrinksafe"/>
       		<arg value="layerOptimize=shrinksafe.keepLines"/>
		<arg value="cssOptimize=comments"/> 
		<arg value="stripConsole=normal"/>
		<arg value="verbose=true"/>
<!--					<arg value="cssOptimize=comments.keepLines"/> -->
		</exec>
		<echo>Done building dojo using exec</echo>
        <!-- copy the runtime built files out to the temp directory -->
        <mkdir dir="${dojo.release-temp.dir}/wm_build"/>
        <copy todir="${dojo.release-temp.dir}/wm_build">
            <fileset dir="${dojo.release.dir}/dojo/dojo">
                <include name="dojo.js" />
                <include name="lib_build.js" />
                <include name="nls/**" />
            </fileset>
            <fileset dir="${dojo.release.dir}/dojo/dijit">
                <include name="themes/**"/>
            </fileset>
        </copy>

        <move file="${dojo.release.dir}/dojo/dojo/lib_build.js.uncompressed.js"
            tofile="${dojo.release-temp.dir}/wm_build/lib_build_uncompressed.js" />
    	
    	<!-- copy the runtime built compressed modules to the compressed directory -->
        <mkdir dir="${compressed.modules}"/>
        <copy todir="${compressed.modules}">
            <fileset dir="${dojo.release.dir}/dojo/dojo">
                <include name="wm_charts.js" />
                <include name="wm_menus.js" />
                <include name="wm_dojo_grid.js" />
                <include name="wm_editors.js" />
                <include name="wm_editors_old.js" />
                <include name="wm_livepanel.js" />
                <include name="wm_richTextEditor.js" />
            	  <include name="wm_gadgets.js" />
            </fileset>
        </copy>

        <mkdir dir="${dojo.release-temp.dir}/wm_build/Gzipped"/>
        <gzip src="${dojo.release-temp.dir}/wm_build/lib_build.js" destfile="${dojo.release-temp.dir}/wm_build/Gzipped/lib_build.js.gz"/>    	
        <gzip src="${dojo.release.dir}/dojo/dojo/wm_charts.js" destfile="${dojo.release-temp.dir}/wm_build/Gzipped/wm_charts.js.gz"/>    	
        <gzip src="${dojo.release.dir}/dojo/dojo/wm_menus.js" destfile="${dojo.release-temp.dir}/wm_build/Gzipped/wm_menus.js.gz"/>    	
        <gzip src="${dojo.release.dir}/dojo/dojo/wm_dojo_grid.js" destfile="${dojo.release-temp.dir}/wm_build/Gzipped/wm_dojo_grid.js.gz"/>    	
        <gzip src="${dojo.release.dir}/dojo/dojo/wm_editors.js" destfile="${dojo.release-temp.dir}/wm_build/Gzipped/wm_editors.js.gz"/>    	
        <gzip src="${dojo.release.dir}/dojo/dojo/wm_editors_old.js" destfile="${dojo.release-temp.dir}/wm_build/Gzipped/wm_editors_old.js.gz"/>    	
        <gzip src="${dojo.release.dir}/dojo/dojo/wm_livepanel.js" destfile="${dojo.release-temp.dir}/wm_build/Gzipped/wm_livepanel.js.gz"/>    	
        <gzip src="${dojo.release.dir}/dojo/dojo/wm_richTextEditor.js" destfile="${dojo.release-temp.dir}/wm_build/Gzipped/wm_richTextEditor.js.gz"/>    	
        <gzip src="${dojo.release.dir}/dojo/dojo/wm_gadgets.js" destfile="${dojo.release-temp.dir}/wm_build/Gzipped/wm_gadgets.js.gz"/>    	

        <!-- copy files in; required for the studio build -->
        <mkdir dir="${lib.webapproot.studio.dir}/wm/studio" />
        <copy todir="${lib.webapproot.studio.dir}/wm/studio/pages">
            <fileset dir="${webapproot.studio.dir}/pages"/>
        </copy>
        <copy todir="${lib.webapproot.studio.dir}/wm/studio/app">
            <fileset dir="${webapproot.studio.dir}/app" />
        </copy>

        <!-- studio build 1 (compressed) -->
	<!-- parameters documented at http://dojotoolkit.org/reference-guide/build/buildScript.html
	     NOTE: We'd like to use optimize=shrinksafe but this mangles parameter names, impacting
	           all event handlers and autocompletion, so we just use "comments" and then gzip it.
	-->
		<echo>Building studio</echo>
		<exec dir="${dojo.src.dir}/util/buildscripts/" executable="${dojo.executable.cmd}"	>
			<arg value="${executable.cmd.variable}"/>
			<arg value="${dojo.script-path-param}"/>
       		<arg value="releaseDir=${dojo.release.dir}"/>
       		<arg value="profileFile=${basedir}/webapproot/app/buildUtil/profiles/studio.profile.js"/>
       		<arg value="version=1.5.0.pro"/>
       		<arg value="copyTests=false"/>
       		<arg value="action=clean,release"/>
       		<arg value="optimize=comments"/>
       		<arg value="layerOptimize=comments"/>
		<arg value="cssOptimize=comments"/> 
		<arg value="stripConsole=normal"/>
		<arg value="log=0"/>
<!--					<arg value="cssOptimize=comments.keepLines"/>-->
		</exec>
		<echo>Done building studio</echo>

        <!-- copy the studio 1/compressed built files out to the temp directory -->
        <mkdir dir="${dojo.release-temp.dir}/build" />
        <copy todir="${dojo.release-temp.dir}/build">
            <fileset dir="${dojo.release.dir}/dojo/dojo">
                <include name="studio_wm.js" />
            </fileset>
        </copy>
        <copy todir="${dojo.release-temp.dir}/build">
            <fileset dir="${dojo.release.dir}/dojo/dojo">
                <include name="studio_base.js" />
                <include name="studio.js" />
                <include name="nls/**" />
            </fileset>
            <fileset dir="${dojo.release.dir}/dojo/dijit">
                <include name="themes/**"/>
            </fileset>
        </copy>
        <gzip src="${dojo.release-temp.dir}/build/studio_base.js" destfile="${dojo.release-temp.dir}/build/studio_base.js.gz"/>    	
        <gzip src="${dojo.release-temp.dir}/build/studio_base.js" destfile="${dojo.release-temp.dir}/build/studio_base.js.gz"/>    	
        <gzip src="${dojo.release-temp.dir}/build/studio_wm.js" destfile="${dojo.release-temp.dir}/build/studio_wm.js.gz"/>    	
        <gzip src="${dojo.release-temp.dir}/build/studio.js" destfile="${dojo.release-temp.dir}/build/studio.js.gz"/>    	

        <!-- copy the built files to their destination -->
        <mkdir dir="${build.lib.webapproot.studio.dir}" />
        <copy todir="${build.lib.webapproot.studio.dir}">
            <fileset dir="${dojo.release-temp.dir}/wm_build" />
        </copy>
        <mkdir dir="${build.webapproot.studio.dir}" />
        <copy todir="${build.webapproot.studio.dir}">
            <fileset dir="${dojo.release-temp.dir}/build/" />
        </copy>

        <copy tofile="${dojo.src.dir}/dijit/themes/tundra/t.css" file="${dojo.release-temp.dir}/wm_build/themes/tundra/tundra.css" />
        <!-- also deleted as part of clean -->
        <delete dir="${lib.webapproot.studio.dir}/wm/studio" />
        <delete dir="${dojo.release.dir}" />
        <delete dir="${dojo.release-temp.dir}" />

        <!-- move dojo build to the source dojo folder -->
		<!--
    	<move
              file="${build.lib.webapproot.studio.dir}/dojo.js"
              tofile="${dojo.build.file}"/>
        -->
        <gzip src="${build.lib.webapproot.studio.dir}/dojo.js" destfile="${dojo.build.file}.gz"/>    	
    </target>

    <target name="jslint">
        <java classname="org.mozilla.javascript.tools.shell.Main"
            failonerror="true"
            outputproperty="jslint.output"
            fork="true" maxmemory="256m">
            <classpath>
                <pathelement location="${rhino.jar}"/>
            </classpath>

            <arg value="${jslint.js}"/>

            <arg value="${build.webapproot.studio.dir}/studio_wm.js"/>
        </java>

        <condition property="jslint.success" value="success" else="fail">
            <not>
                <contains string="${jslint.output}"
                    substring="Stopping, unable to continue."/>
            </not>
        </condition>
        <echo>JSLINT OUTPUT -----------------------
${jslint.output}
jslint ${jslint.success}
-------------------------------------</echo>

        <echo file="${jslint.statusfile}">${jslint.success}</echo>
    </target>

</project>
