<!--
     Copyright (C) 2011 VMWare, Inc. All rights reserved.
   
     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at
        http://www.apache.org/licenses/LICENSE-2.0
     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->
<project name="shared-installers" default="" basedir=".">
    <description>
        This script contains shared tasks used by the installers.
    </description>

    <property name="port" value="8094" />

	<condition property="isEnterprise">
        <equals arg1="enterprise" arg2="enterprise"/>
    </condition>
    
	<target name="build-dist">
	<echo>build-dist.xml
     Copying the build files into ${dist.studio.dir}</echo>
        <mkdir dir="${dist.studio.dir}"/>
        <copy todir="${dist.studio.dir}">
            <fileset dir="${webapproot.studio.dir}">
                <exclude name="/lib/dojo/util/**" />
                <exclude name="**/.svn*" />
                <exclude name="**/test*" />
                <exclude name="**/tests*" />
                <exclude name="**/php*" />
                <exclude name="**/*.war"/>
             		<exclude name="**/lib/ace/**"/>
		        		<exclude name="**/jtds*.jar"/>
		        		<exclude name="**/hibernate*.jar"/>
		        		<exclude name="**/db2jcc.jar" />
		        		<exclude name="**/ojdbc14.jar" />
		        		<exclude name="**/wsdl4j.jar" />
            </fileset>
        </copy>
        
        <mkdir dir="${dist.studioConfig.dir}"/>
        <copy todir="${dist.studioConfig.dir}">
            <fileset dir="${webapproot.studioConfig.dir}">
                <exclude name="**/.svn*" />
                <exclude name="**/lib/ace/**"/>
		        		<exclude name="**/jtds*.jar"/>
		        		<exclude name="**/hibernate*.jar"/>
		        		<exclude name="**/db2jcc.jar" />
		        		<exclude name="**/ojdbc14.jar" />
		        		<exclude name="**/wsdl4j.jar" />
            </fileset>
        </copy>
		</target>
	
	
      <target name="common-installer.generate-dist"  depends="build-dist"
            description="Generate the installer dist; depends on 'installer.wm.root' being set">
        <mkdir dir="${installer.wm.root}"/>
        <mkdir dir="${installer.wm.root}/Support"/>
        <copy todir="${installer.wm.root}/Support">
            <fileset dir="${root.dir}/../Support">
                <exclude name="**/.svn"/>
		<exclude name="**/Batchbuild/**" unless="isEnterprise"/>
            </fileset>
        </copy>

        <mkdir dir="${installer.wm.root}/Samples"/>
        <copy todir="${installer.wm.root}/Samples">
            <fileset dir="${root.dir}/demos">
                <exclude name="**/.svn"/>
 		<exclude name="**/WebServicesExample/**"/>
            </fileset>
        </copy>

        <copy todir="${installer.wm.root}/launcher">
            <fileset dir="${dist.launcher.dir}"/>
        </copy>

        <copy todir="${installer.wm.root}/studio">
            <fileset dir="${dist.studio.dir}">
		<exclude name="**/RbacPlugin.js" unless="isEnterprise"/>
		<exclude name="**/DojoFlashFileUpload.js" unless="isEnterprise"/>
		<exclude name="**/dojo/util/**"/>
		<exclude name="**/infoteria/**"/>	
	</fileset>
        </copy>
        
        <mkdir dir="${installer.wm.root}/studioConfig"/>
        <copy todir="${installer.wm.root}/studioConfig">
            <fileset dir="${dist.studioConfig.dir}"/>
        </copy>

        <copy todir="${installer.wm.root}">
            <fileset dir="${build.dir}">
                <include name="VERSION"/>
            </fileset>
        </copy>
    </target>
      
  <target name="common-installer.generate-dist-nojdk"  depends="build-dist"
            description="Generate the installer dist; depends on 'installer.wm.nojdk.root' being set">
        <mkdir dir="${installer.wm.nojdk.root}"/>
        <mkdir dir="${installer.wm.nojdk.root}/Support"/>
        <copy todir="${installer.wm.nojdk.root}/Support">
          <fileset dir="${root.dir}/../Support">
             <exclude name="**/.svn"/>
	     <exclude name="**/Batchbuild/**" unless="isEnterprise"/>
          </fileset>
        </copy>

        <mkdir dir="${installer.wm.nojdk.root}/Samples"/>
        <copy todir="${installer.wm.nojdk.root}/Samples">
          <fileset dir="${root.dir}/demos">
            <exclude name="**/.svn"/>
	    <exclude name="**/WebServicesExample/**"/>
          </fileset>
        </copy>

        <copy todir="${installer.wm.nojdk.root}/launcher">
            <fileset dir="${dist.launcher.dir}"/>
        </copy>

        <copy todir="${installer.wm.nojdk.root}/studio">
          <fileset dir="${dist.studio.dir}">
	     	<exclude name="**/RbacPlugin.js" unless="isEnterprise"/>
		<exclude name="**/DojoFlashFileUpload.js" unless="isEnterprise"/>
		<exclude name="**/dojo/util/**"/>
		<exclude name="**/infoteria/**"/>
	  </fileset>
        </copy>

        <mkdir dir="${installer.wm.nojdk.root}/studioConfig"/>
        <copy todir="${installer.wm.nojdk.root}/studioConfig">
            <fileset dir="${dist.studioConfig.dir}"/>
        </copy>
        
        <copy todir="${installer.wm.nojdk.root}">
            <fileset dir="${build.dir}">
              <include name="VERSION"/>
            </fileset>
        </copy>
    </target>
  
    <target name="common-installer.clean">
        <delete dir="${installer.wm.nojdk.root}"/>
	  </target>
	
	   <target name="build-source" description="Creates a source tarball" >
<!--	        depends="common.generate-best-license" if="buildSrc" unless="skip.build-source"> -->
			
		<echo>DEBUG VERSION.TXT: build.dir == ${build.dir} PREFIX = ${tarroot}, version.file.name = ${version.file.name}</echo>
			<property name="tempsrc.root" value="${build.dir}/tempsrcroot"/>
	        <property name="tarroot"
	                value="wavemaker-source-${version.number}"/>
	        <property name="disclosureroot"
	                 value="wavemaker-oss-disclosure-${version.number}"/>
	        <mkdir dir="${build.dir}"/>
			<delete dir="${tempsrc.root}"/>
			<mkdir dir="${tempsrc.root}"/>
		<echo>Copying source directories to the temporary directory...</echo>
			<copy todir="${tempsrc.root}">
	            <fileset dir="${root.dir}/..">
	            </fileset>
	        </copy>

		<antcall target="prep-build-source"/>
			
	        <tar destfile="${build.dir}/${tarroot}.tar.bz2"
	                longfile="gnu" compression="bzip2">
	            <tarfileset dir="${tempsrc.root}" prefix="${tarroot}">
	                <exclude name="**/.svn"/>
	                <exclude name="**/bin/**"/>
	                <exclude name="**/*.war"/>
	                <exclude name="infra/**"/>                             
	                <exclude name="foo/**"/>
	                <exclude name="test/**"/>
	                <exclude name="copyrights/**"/>
	                <exclude name="installer/windows/jdk1.6.0_24.zip"/>
	                <exclude name="dev/build/**"/>
	                <exclude name="dev/cloud/**"/>
	                <exclude name="dev/modules/**"/>
	                <exclude name="dev/Applications/**"/>
	                <exclude name="dev/map.txt"/>
	                <exclude name="dev/studio/services/CloudDB/**"/>
	                <exclude name="dev/studio/services/dummyService/**"/>
	                <exclude name="dev/studio/services/registrationService/**"/>
	                <exclude name="dev/studio/services/UserService/**"/>
	                <exclude name="dev/studio/webapproot/*.war"/>
	                <exclude name="dev/studio/webapproot/lib/dojo/util/**"/>
	                <exclude name="dev/studio/webapproot/app/lib/ace/**"/>
	                <exclude name="dev/studio/webapproot/app/lib/ace-build/**"/>
	                <exclude name="dev/studio/webapproot/WEB-INF/lib/hibernate-tools.jar"/>
	                <exclude name="dev/studio/webapproot/WEB-INF/lib/hibernate3.jar"/>
	                <exclude name="dev/studio/webapproot/WEB-INF/lib/db2jcc.jar"/>
	                <exclude name="dev/studio/webapproot/WEB-INF/lib/ojdbc14.jar"/>
	                <exclude name="dev/studio/webapproot/WEB-INF/lib/wsdl4j.jar"/>
	                <exclude name="dev/core/runtime/lib/jdbc/mysql-connector-java-5.1.11-src/**"/>
	                <exclude name="dev/core/runtime/lib/wadl/wadl-1.0-src/**"/>
	                <exclude name="dev/core/runtime/lib/wsdl4j-1_6_2/wsdl4j.jar"/>
	                <exclude name="dev/core/runtime/lib/wsdl4j-1_6_2/wsdl4j-src-1.6.2.zip"/>
	                <exclude name="dev/core/runtime/lib/jaxb-ri-2.1.9/src"/>
	                <exclude name="dev/core/runtime/lib/jaxb-ri-2.1.9/jaxb-xjc.src.jar"/>
	                <exclude name="dev/core/runtime/lib/jaxb-ri-2.1.9/jaxb-api-src.jar"/>
	                <exclude name="dev/core/runtime/lib/jaxb-ri-2.1.9/jaxb-impl.src.jar"/>
	                <exclude name="dev/core/runtime/lib/hibernate-3.2/**"/>
	                <exclude name="dev/core/tools/lib/HibernateTools-3.2.0.GA/**"/>
	                <exclude name="**/RbacPlugin.js" unless="common.modules.isEnterprise"/>
	            </tarfileset>
	            <tarfileset dir="${build.dir}" prefix="${tarroot}">
	            	<include name="${version.file.name}"/>
	            	<include name="${license.file.name}"/>
	            </tarfileset>
	            <tarfileset dir="${src.buildsupport.dir}" prefix="${tarroot}">
	                <exclude name="*_license.txt"/>
	            </tarfileset>
	            <tarfileset dir="${modules.dir}"
	                    prefix="${tarroot}/dev/modules">
	                <include name="*"/>				
	                <patternset refid="common.modules.patternset"/>
					<exclude name="wm.db2/**" />
					<exclude name="wm.oracle/**" />
	            </tarfileset>
	        </tar>

	        <tar destfile="${build.dir}/${disclosureroot}.tar.bz2"
	                longfile="gnu" compression="bzip2">
	            <tarfileset dir="${tempsrc.root}" prefix="${disclosureroot}">
	                <include name="dev/studio/webapproot/app/lib/ace/**"/>
	                <include name="dev/studio/webapproot/app/lib/ace-build/**"/>
	                <include name="dev/core/runtime/lib/jdbc/mysql-connector-java-5.1.11-src/**"/>
	                <include name="dev/core/runtime/lib/wadl/wadl-1.0-src/**"/>
	                <include name="dev/core/runtime/lib/jaxb-ri-2.1.9/src"/>
	                <include name="dev/core/runtime/lib/jaxb-ri-2.1.9/jaxb-xjc.src.jar"/>
	                <include name="dev/core/runtime/lib/jaxb-ri-2.1.9/jaxb-api-src.jar"/>
	                <include name="dev/core/runtime/lib/jaxb-ri-2.1.9/jaxb-impl.src.jar"/>
	                <include name="dev/core/runtime/lib/hibernate-3.2/**"/>
	                <include name="dev/core/tools/lib/HibernateTools-3.2.0.GA/**"/>
	            </tarfileset>
	        </tar>
	    	
	    	
		<delete dir="${tempsrc.root}"/>
	    </target>

		
	    <target name="prep-build-source" description="Preps dummy for build-source">
		<echo>Prep Build Source</echo>
		<copy file="${studio.dir}/../modules/lib/ant-contrib-0.6.jar" todir="${tempsrc.root}/dev/modules/lib" /> 
		<copy file="${studio.dir}/services/dummyService/dummyService.spring.xml" tofile="${tempsrc.root}/dev/studio/webapproot/WEB-INF/classes/CloudDB.spring.xml" /> 
		<copy file="${studio.dir}/services/dummyService/dummyService.spring.xml" tofile="${tempsrc.root}/dev/studio/webapproot/WEB-INF/classes/registrationService.spring.xml" /> 
		<copy file="${studio.dir}/services/dummyService/dummyService.spring.xml" tofile="${tempsrc.root}/dev/studio/webapproot/WEB-INF/classes/UserService.spring.xml" /> 

		<mkdir dir="${tempsrc.root}/dev/core-dummy/common/src"/>
		<mkdir dir="${tempsrc.root}/dev/core-dummy/json/src"/>
		<mkdir dir="${tempsrc.root}/dev/core-dummy/runtime/src"/>
		<mkdir dir="${tempsrc.root}/dev/core-dummy/tools/src"/>
	    </target>	
	    
	    <target name="clean" description="Cleans both regular and js builds">
	        <delete dir="${dist.studio.dir}"/>
	        <ant antfile="build.xml" target="cleanall"/>
	        <ant dir="${studio.dir}" antfile="build-js.xml" target="clean"/>
	    </target>
	
</project>
